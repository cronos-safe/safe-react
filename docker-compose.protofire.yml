version: '3.8'

volumes:
  nginx-shared-txs:
  nginx-shared-cfg:

services:

  # Common nginx and database
  nginx:
    image: nginx:alpine
    ports:
      - "${REVERSE_PROXY_PORT}:8000"
    volumes:
      - ./protofire/docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx-shared-txs:/nginx-txs
      - nginx-shared-cfg:/nginx-cfg
    depends_on:
      - txs-web
      - cfg-web
      - cgw-web
    networks:
      - network

  db:
    image: postgres:10-alpine
    environment:
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./protofire/docker/data/db:/var/lib/postgresql/data
    networks:
      - network

  # Safe Transaction Service
  txs-redis:
    image: redis:alpine
    networks:
      - network

  txs-rabbitmq:
    image: rabbitmq:alpine
    networks:
      - network

  txs-web:
    image: gnosispm/safe-transaction-service:${TXS_VERSION}
    env_file:
      - protofire/container_env_files/txs.env
    environment:
      - ETHEREUM_NODE_URL=${RPC_NODE_URL}
    depends_on:
      - db
      - txs-redis
    working_dir: /app
    volumes:
      - nginx-shared-txs:/nginx
      - ./protofire:/protofire
    command: /protofire/docker/web/run_web.sh
    networks:
      - network

  txs-worker: &worker
    image: gnosispm/safe-transaction-service:${TXS_VERSION}
    env_file:
      - ./protofire/container_env_files/txs.env
    environment:
      - ETHEREUM_NODE_URL=${RPC_NODE_URL}
    depends_on:
      - db
      - txs-redis
    command: /protofire/docker/web/celery/worker/run.sh
    volumes:
      - ./protofire:/protofire
    networks:
      - network

  txs-scheduler:
    <<: *worker
    command: /protofire/docker/web/celery/scheduler/run.sh
    volumes:
      - ./protofire:/protofire
    networks:
      - network

  # Safe Config Service
  cfg-web:
    image: gnosispm/safe-config-service:${CFG_VERSION}
    tty: true
    volumes:
      - nginx-shared-cfg:/nginx
    env_file:
      - protofire/container_env_files/cfg.env
    depends_on:
      - db
    networks:
      - network

  # Safe Client Gateway
  cgw-redis:
    image: redis:alpine
    networks:
      - network

  cgw-web:
    image: gnosispm/safe-client-gateway:${CGW_VERSION}
    env_file:
      - protofire/container_env_files/cgw.env
    depends_on:
      - cgw-redis
    networks:
      - network

  ui:
    build: ./
    volumes:
      - /app/node_modules
      - /app/src/types/contracts
      - ./:/app
    ports:
      - "${REVERSE_PROXY_UI_PORT}:3000"
    env_file:
      - protofire/container_env_files/ui.env
    depends_on:
      - nginx
    networks:
      - network


networks:
  network:
